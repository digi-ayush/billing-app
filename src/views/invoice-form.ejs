<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8" />
  <title>Create Invoice</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body { background: linear-gradient(90deg,#4facfe,#00f2fe); min-height:100vh; }
    .card { border-radius: 12px; margin-top:30px; }
    .small { font-size: 0.9rem; }
  </style>
</head>
<body>
<div class="container">
  <div class="card shadow p-4">
    <h3>Create Invoice</h3>
    <form id="invoiceForm" method="POST" action="/invoice">
      <div class="row mb-3">
        <div class="col-md-6">
          <label class="form-label">Company Name</label>
          <input class="form-control" name="companyName" value="AK ENTERPRISES">
        </div>
        <div class="col-md-6">
          <label class="form-label">Invoice No.</label>
          <input class="form-control" name="invoiceNo" value="">
        </div>
      </div>

      <div class="row mb-3">
        <div class="col-md-6"><label class="form-label">Date</label><input class="form-control" name="date" value=""></div>
        <div class="col-md-6"><label class="form-label">Due Date</label><input class="form-control" name="dueDate" value=""></div>
      </div>

      <h5>Bill To</h5>
      <div class="mb-3"><input class="form-control" name="customerName" placeholder="Customer/Company name"></div>
      <div class="mb-3"><input class="form-control" name="customerAddress" placeholder="Customer address"></div>

      <h5 class="mt-4">Line Items</h5>
      <table class="table" id="itemsTable">
        <thead>
          <tr><th>Item</th><th>HSN</th><th>Qty</th><th>Price</th><th>Tax %</th><th></th></tr>
        </thead>
        <tbody>
          <tr>
            <td><input name="description" class="form-control"></td>
            <td><input name="hsn" class="form-control"></td>
            <td><input name="qty" class="form-control" type="number" value="1"></td>
            <td><input name="price" class="form-control" type="number" value="0"></td>
            <td><input name="taxRate" class="form-control" type="number" value="18"></td>
            <td><button type="button" class="btn btn-danger btn-sm removeRow">-</button></td>
          </tr>
        </tbody>
      </table>
      <button type="button" id="addItem" class="btn btn-outline-primary btn-sm">Add Item</button>

      <h5 class="mt-4">Bank Details</h5>
      <div class="row">
        <div class="col-md-4"><input class="form-control" name="bankName" placeholder="Bank Name"></div>
        <div class="col-md-4"><input class="form-control" name="bankAccount" placeholder="Account No"></div>
        <div class="col-md-4"><input class="form-control" name="bankIfsc" placeholder="IFSC"></div>
      </div>

      <div class="mt-4 d-flex gap-2">
        <button type="submit" class="btn btn-primary">Preview Invoice</button>
        <button type="button" id="downloadPdf" class="btn btn-success">Download as PDF</button>
      </div>
    </form>
  </div>
</div>

<script>
document.getElementById('addItem').addEventListener('click', ()=>{
  const tbody = document.querySelector('#itemsTable tbody');
  const tr = document.createElement('tr');
  tr.innerHTML = `
    <td><input name="description" class="form-control"></td>
    <td><input name="hsn" class="form-control"></td>
    <td><input name="qty" class="form-control" type="number" value="1"></td>
    <td><input name="price" class="form-control" type="number" value="0"></td>
    <td><input name="taxRate" class="form-control" type="number" value="18"></td>
    <td><button type="button" class="btn btn-danger btn-sm removeRow">-</button></td>
  `;
  tbody.appendChild(tr);
});

document.addEventListener('click', e => {
  if (e.target && e.target.classList.contains('removeRow')) {
    const row = e.target.closest('tr');
    row.remove();
  }
});

// Download PDF (sends the same form data to /invoice/pdf)
document.getElementById('downloadPdf').addEventListener('click', async () => {
  const form = document.getElementById('invoiceForm');
  const formData = new FormData(form);
  // convert formData to plain object with arrays
  const obj = {};
  for (const [k,v] of formData.entries()) {
    if (obj[k]) {
      // already exists -> array
      if (!Array.isArray(obj[k])) obj[k] = [obj[k]];
      obj[k].push(v);
    } else obj[k] = v;
  }

  // send POST to /invoice/pdf and download response
  const res = await fetch('/invoice/pdf', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(obj)
  });

  if (!res.ok) { alert('Failed to create PDF'); return; }
  const blob = await res.blob();
  const url = URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.href = url;
  a.download = (obj.invoiceNo || 'invoice') + '.pdf';
  document.body.appendChild(a);
  a.click();
  a.remove();
});
</script>
</body>
</html>
